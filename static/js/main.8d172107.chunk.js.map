{"version":3,"sources":["Components/Header.tsx","Components/Homepage.tsx","Components/PageNotFound.tsx","Components/Person.tsx","Components/HeaderCell.tsx","Components/TableHeader.tsx","Components/PeopleTable.tsx","Components/PeoplePage.tsx","helpers/api.ts","App.tsx","index.tsx"],"names":["Header","className","to","exact","activeClassName","Homepage","PageNotFound","Person","info","history","useHistory","slug","useParams","location","useLocation","searchParams","URLSearchParams","search","motherName","name","fatherName","onClick","push","pathname","toString","cn","sex","born","died","HeaderCell","sortedBy","get","set","TableHeader","columnNames","map","key","PeopleTable","people","person","PeoplePage","useState","tableWithPeople","setTableWithPeople","sortType","useEffect","a","axios","data","find","father","mother","getDataFromServer","filteredTable","useMemo","searchQuery","normalizedQuery","toLowerCase","filter","includes","getFilteredPersons","sort","sortParam","b","localeCompare","sortPeople","type","value","onChange","e","target","App","path","component","from","ReactDOM","render","document","getElementById"],"mappings":"kPAGaA,G,MAAS,kBACpB,4BAAQC,UAAU,UAChB,wBAAIA,UAAU,mBAAd,4BACA,yBAAKA,UAAU,eACb,wBAAIA,UAAU,oBACZ,wBAAIA,UAAU,oBACZ,kBAAC,IAAD,CAASC,GAAG,IAAIC,OAAK,EAACF,UAAU,mBAAmBG,gBAAgB,4BAAnE,SAEF,wBAAIH,UAAU,oBACZ,kBAAC,IAAD,CAASC,GAAG,UAAUD,UAAU,mBAAmBG,gBAAgB,4BAAnE,gBCVGC,EAAW,WACtB,OAAO,wBAAIJ,UAAU,aAAd,cCDIK,EAAe,WAC1B,OAAO,wBAAIL,UAAU,cAAd,mB,2ECKIM,EAA0B,SAAC,GAEjC,IAAD,IADJC,EACI,EADJA,KAEMC,EAAUC,cACRC,EAASC,cAATD,KACFE,EAAWC,cACXC,EAAe,IAAIC,gBAAgBH,EAASI,QAC5CC,EAAU,UAAGV,EAAKU,kBAAR,aAAG,EAAiBC,KAC9BC,EAAU,UAAGZ,EAAKY,kBAAR,aAAG,EAAiBD,KAEpC,OACE,wBACEE,QAAS,WACPZ,EAAQa,KAAK,CACXC,SAAS,WAAD,OAAaf,EAAKG,MAC1BM,OAAQF,EAAaS,cAGzBvB,UAAWwB,IAAG,gBAAiB,CAC7B,2BAAyC,MAAbjB,EAAKkB,IACjC,6BAA2C,MAAblB,EAAKkB,IACnC,uBAAwBlB,EAAKG,OAASA,KAGxC,wBAAIV,UAAU,sBAAsBO,EAAKW,MACzC,wBAAIlB,UAAU,sBAAsBO,EAAKkB,KACzC,wBAAIzB,UAAU,sBAAsBO,EAAKmB,MACzC,wBAAI1B,UAAU,sBAAsBO,EAAKoB,MACzC,wBAAI3B,UAAU,sBAAsBmB,GAAc,aAClD,wBAAInB,UAAU,sBAAsBiB,GAAc,eC9B3CW,EAA8B,SAAC,GAAc,IAAZV,EAAW,EAAXA,KACtCV,EAAUC,cACVG,EAAWC,cAEXC,EAAe,IAAIC,gBAAgBH,EAASI,QAC5Ca,EAAWf,EAAagB,IAAI,UAYlC,OACE,wBACE9B,UAAU,qBACVoB,QAAS,WAbE,WAATF,GAA8B,WAATA,IAIzBJ,EAAaiB,IAAI,SAAjB,UAA8Bb,IAC9BV,EAAQa,KAAK,CACXL,OAAQF,EAAaS,gBAWpBL,EACAA,IAASW,GAAY,MCzBfG,EAA+B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC7C,OACE,2BAAOjC,UAAU,iBACf,wBAAIA,UAAU,qBACXiC,EAAYC,KAAI,SAAAhB,GAAI,OAAI,kBAAC,EAAD,CAAYA,KAAMA,EAAMiB,IAAKjB,UCHjDkB,EAA+B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAG7C,OACE,2BAAOrC,UAAU,SACf,6BAASA,UAAU,kBAAnB,gBACA,kBAAC,EAAD,CAAaiC,YALK,CAAC,OAAQ,MAAO,OAAQ,OAAQ,SAAU,YAM5D,2BAAOjC,UAAU,eACdqC,EAAOH,KAAI,SAACI,GAAD,OACV,kBAAC,EAAD,CAAQ/B,KAAM+B,EAAQH,IAAKG,EAAOpB,KAAOoB,EAAOX,aCZ7CY,EAAuB,WAAO,IAAD,EACMC,mBAA2B,IADjC,mBACjCC,EADiC,KAChBC,EADgB,KAGlClC,EAAUC,cACVG,EAAWC,cACXC,EAAe,IAAIC,gBAAgBH,EAASI,QAC5CA,EAASF,EAAagB,IAAI,UAAY,GACtCa,EAAW7B,EAAagB,IAAI,WAAa,GAkB/Cc,qBAAU,YACe,uCAAG,8BAAAC,EAAA,sEC1BrBC,IAAMhB,IAHH,qED6BkB,gBAChBiB,EADgB,EAChBA,KAERL,EACEK,EAAKb,KAAI,SAACI,GAAD,mBAAC,eACLA,GADI,IAEPnB,WAAY4B,EAAKC,MACf,SAACC,GAAD,OAAoBX,EAAOnB,aAAe8B,EAAO/B,QAEnDD,WAAY8B,EAAKC,MACf,SAACE,GAAD,OAAoBZ,EAAOrB,aAAeiC,EAAOhC,cAV/B,2CAAH,qDAgBvBiC,KACC,IAEH,IAuBMC,EAAgBC,mBACpB,kBAxByB,SACzBC,EACAjB,GAEA,IAAKiB,EACH,OAAOjB,EAGT,IAAMkB,EAAkBD,EAAYE,cAEpC,OAAOnB,EAAOoB,QAAO,SAACnB,GACpB,OAAKA,EAAOnB,YAAemB,EAAOrB,WAI3B,UAAGqB,EAAOpB,KAAV,6BACKoB,EAAOnB,WAAWD,KADvB,4BAEIoB,EAAOrB,WAAWC,MAC1BsC,cACAE,SAASH,GAPHjB,EAAOpB,KAAKsC,cAAcE,SAASH,MAYxCI,CAAmB3C,EAAQyB,GAAiBmB,KA5DjC,SAACC,GAClB,OAAQA,GACN,IAAK,OACH,OAAO,SAAChB,EAAmBiB,GACzB,OAAOjB,EAAE3B,KAAK6C,cAAcD,EAAE5C,OAGlC,IAAK,MACH,OAAO,SAAC2B,EAAmBiB,GAApB,OAA0CjB,EAAEpB,IAAIsC,cAAcD,EAAErC,MACzE,IAAK,OACH,OAAO,SAACoB,EAAmBiB,GAApB,OAA0CjB,EAAEnB,KAAOoC,EAAEpC,MAC9D,QACE,OAAO,SAACmB,EAAmBiB,GAApB,OAA0CjB,EAAElB,KAAOmC,EAAEnC,OAgDTqC,CAAWrB,MAClE,CAAC3B,EAAQyB,EAAiBE,IAG5B,OACE,oCACE,2BACEsB,KAAK,OACLC,MAAOlD,EACPmD,SAAU,SAACC,GACTtD,EAAaiB,IAAI,QAASqC,EAAEC,OAAOH,OACnC1D,EAAQa,KAAK,CACXL,OAAQF,EAAaS,gBAI3B,kBAAC,EAAD,CAAac,OAAQe,MEtDZkB,EA1BO,WACpB,OACE,yBAAKtE,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEuE,KAAK,iBACLC,UAAWjC,IAEb,kBAAC,IAAD,CACEgC,KAAK,IACLrE,OAAK,EACLsE,UAAWpE,IAEb,kBAAC,IAAD,CACEqE,KAAK,QACLxE,GAAG,MAEL,kBAAC,IAAD,CACEuE,UAAWnE,OCxBrBqE,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.8d172107.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header = () => (\n  <header className=\"header\">\n    <h1 className=\"header__capture\">People Table Application</h1>\n    <nav className=\"header__nav\">\n      <ul className=\"header__nav-list\">\n        <li className=\"header__nav-item\">\n          <NavLink to=\"/\" exact className=\"header__nav-link\" activeClassName=\"header__nav-link--active\">Home</NavLink>\n        </li>\n        <li className=\"header__nav-item\">\n          <NavLink to=\"/people\" className=\"header__nav-link\" activeClassName=\"header__nav-link--active\">People</NavLink>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n","import React from 'react';\n\nexport const Homepage = () => {\n  return <h1 className=\"home-page\">Home page</h1>;\n};\n","import React from 'react';\n\nexport const PageNotFound = () => {\n  return <h1 className=\"error-page\">Page Not Found</h1>;\n};\n","import React from 'react';\nimport { useHistory, useParams, useLocation } from 'react-router-dom';\nimport cn from 'classnames';\n\ntype Props = {\n  info: PreparedPerson;\n};\n\nexport const Person: React.FC<Props> = ({\n  info,\n}) => {\n  const history = useHistory();\n  const { slug } = useParams();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const motherName = info.motherName?.name;\n  const fatherName = info.fatherName?.name;\n\n  return (\n    <tr\n      onClick={() => {\n        history.push({\n          pathname: `/people/${info.slug}`,\n          search: searchParams.toString(),\n        });\n      }}\n      className={cn('table__person', {\n        'table__person-cell--male': info.sex === 'm',\n        'table__person-cell--female': info.sex === 'f',\n        'tab-person--selected': info.slug === slug,\n      })}\n    >\n      <td className=\"table__person-cell\">{info.name}</td>\n      <td className=\"table__person-cell\">{info.sex}</td>\n      <td className=\"table__person-cell\">{info.born}</td>\n      <td className=\"table__person-cell\">{info.died}</td>\n      <td className=\"table__person-cell\">{fatherName || 'not found'}</td>\n      <td className=\"table__person-cell\">{motherName || 'not found'}</td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\ntype Props = {\n  name: string;\n};\n\nexport const HeaderCell: React.FC<Props> = ({ name }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const searchParams = new URLSearchParams(location.search);\n  const sortedBy = searchParams.get('sortBy');\n  const setSortParam = () => {\n    if (name === 'Mother' || name === 'Father') {\n      return;\n    }\n\n    searchParams.set('sortBy', `${name}`);\n    history.push({\n      search: searchParams.toString(),\n    });\n  };\n\n  return (\n    <th\n      className=\"table__header-cell\"\n      onClick={() => {\n        setSortParam();\n      }}\n    >\n      {name}\n      {name === sortedBy && '*'}\n    </th>\n  );\n};\n","import React from 'react';\nimport { HeaderCell } from './HeaderCell';\n\ntype Props = {\n  columnNames: string[];\n};\n\nexport const TableHeader: React.FC<Props> = ({ columnNames }) => {\n  return (\n    <thead className=\"table__header\">\n      <tr className=\"table__header-row\">\n        {columnNames.map(name => <HeaderCell name={name} key={name} />)}\n      </tr>\n    </thead>\n  );\n};\n","import React from 'react';\nimport { Person } from './Person';\nimport { TableHeader } from './TableHeader';\n\ntype Props = {\n  people: PreparedPerson[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const tableCaptions = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n\n  return (\n    <table className=\"table\">\n      <caption className=\"table__capture\">People table</caption>\n      <TableHeader columnNames={tableCaptions} />\n      <tbody className=\"table__body\">\n        {people.map((person) => (\n          <Person info={person} key={person.name + person.died} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { getPeople } from '../helpers/api';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [tableWithPeople, setTableWithPeople] = useState<PreparedPerson[]>([]);\n\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const search = searchParams.get('query') || '';\n  const sortType = searchParams.get('sortBy') || '';\n\n  const sortPeople = (sortParam: string) => {\n    switch (sortParam) {\n      case 'Name':\n        return (a: PreparedPerson, b: PreparedPerson) => {\n          return a.name.localeCompare(b.name);\n        };\n\n      case 'Sex':\n        return (a: PreparedPerson, b: PreparedPerson) => a.sex.localeCompare(b.sex);\n      case 'Born':\n        return (a: PreparedPerson, b: PreparedPerson) => a.born - b.born;\n      default:\n        return (a: PreparedPerson, b: PreparedPerson) => a.died - b.died;\n    }\n  };\n\n  useEffect(() => {\n    const getDataFromServer = async () => {\n      const { data } = await getPeople();\n\n      setTableWithPeople(\n        data.map((person: Person) => ({\n          ...person,\n          fatherName: data.find(\n            (father: Person) => person.fatherName === father.name,\n          ),\n          motherName: data.find(\n            (mother: Person) => person.motherName === mother.name,\n          ),\n        })),\n      );\n    };\n\n    getDataFromServer();\n  }, []);\n\n  const getFilteredPersons = (\n    searchQuery: string,\n    people: PreparedPerson[],\n  ) => {\n    if (!searchQuery) {\n      return people;\n    }\n\n    const normalizedQuery = searchQuery.toLowerCase();\n\n    return people.filter((person) => {\n      if (!person.fatherName || !person.motherName) {\n        return person.name.toLowerCase().includes(normalizedQuery);\n      }\n\n      return `${person.name}\n              + ${person.fatherName.name}\n              +${person.motherName.name}`\n        .toLowerCase()\n        .includes(normalizedQuery);\n    });\n  };\n\n  const filteredTable = useMemo(\n    () => getFilteredPersons(search, tableWithPeople).sort(sortPeople(sortType)),\n    [search, tableWithPeople, sortType],\n  );\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        value={search}\n        onChange={(e) => {\n          searchParams.set('query', e.target.value);\n          history.push({\n            search: searchParams.toString(),\n          });\n        }}\n      />\n      <PeopleTable people={filteredTable} />\n    </>\n  );\n};\n","import axios from 'axios';\n\nconst URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = () => {\n  return axios.get(URL);\n};\n","import React from 'react';\nimport {\n  Switch, Route, Redirect,\n} from 'react-router-dom';\nimport './App.css';\nimport { Header } from './Components/Header';\nimport { Homepage } from './Components/Homepage';\nimport { PageNotFound } from './Components/PageNotFound';\nimport { PeoplePage } from './Components/PeoplePage';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route\n          path=\"/people/:slug?\"\n          component={PeoplePage}\n        />\n        <Route\n          path=\"/\"\n          exact\n          component={Homepage}\n        />\n        <Redirect\n          from=\"/home\"\n          to=\"/\"\n        />\n        <Route\n          component={PageNotFound}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}